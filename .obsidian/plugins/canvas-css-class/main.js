/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var I=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var Y=Object.getOwnPropertyNames;var H=Object.prototype.hasOwnProperty;var J=(n,d)=>{for(var e in d)I(n,e,{get:d[e],enumerable:!0})},X=(n,d,e,s)=>{if(d&&typeof d=="object"||typeof d=="function")for(let t of Y(d))!H.call(n,t)&&t!==e&&I(n,t,{get:()=>d[t],enumerable:!(s=K(d,t))||s.enumerable});return n};var Z=n=>X(I({},"__esModule",{value:!0}),n);var ee={};J(ee,{default:()=>F});module.exports=Z(ee);var p=require("obsidian");var f=(e=>(e.body="body",e.workspaceLeaf="workspace-leaf-content",e))(f||{}),z={canvasAdded:[],logLevel:"none",defaultAppendMode:"workspace-leaf-content"};var u=require("obsidian");var m=require("obsidian");var j=require("obsidian");var V={addCssClass:{title:"Add CSS Class",desc:"The name of the class you want to add to the canvas"},addFilePath:{filePath:"Filepath",desc:"The filepath of the canvas you want to add a class to"},renameCssClass:{title:"Rename CSS Class",desc:"The name of the class you want to rename",placeholder:"New name"},renameFilePath:{title:"Edit canvas filepath",placeholder:"New Filepath",desc:"The new filepath of the canvas you want to rename"},className:"Class Name",addButton:"Add",removeFromCanvas:n=>`Removed ${n[0]} from ${n[1]}`,settings:{title:"Canvas CSS Class Settings",noClassAdded:"No class added yet.",useCommandsInfo:"Use the commands modal to add a canvas and a class.",alreadyApplied:"This class is already applied to this canvas.",appendMode:{default:{title:"Default appending mode",desc:"The default mode to append the class to the canvas, including canvas-file and the data-canvas-path attribute, when the canvas is opened or created."},title:"Append Mode",desc:"Where to append the class into the canvas.",bodyDesc:"Append the canvas to the body. Allow to export as an image with the canvas but can have some unexpected mode, notably when multiple files are open.",workspaceLeafDesc:"Append the canvas to the workspace-leaf-content. Keep the class when focus change but can't be exported with the image.",options:{body:"body",workspaceLeaf:"workspace-leaf-content"},edit:"Edit the mode for appending class to the canvas."},console:{title:"Log Level",desc:"Allows to better follow the additions/removals made by the plugin. Notice will display an Obsidian notification.",options:{none:"None",error:"Error",log:"Log",warn:"Warn",notice:"Notice"}},newCanvas:{addingInfo:"Use the commands modal to add a class to a new file.",addNewCanvas:"Add new Canvas"},newClass:{addingInfo:"Add a class to this canvas"},edit:{filepath:"Edit filepath",class:"Rename class"},remove:{desc:"Remove all classes from this canvas",title:"Remove"}},commands:{addCanvas:"Add a CSS Class to the active canvas",removeCanvas:"Remove a CSS Class from the active canvas",changeAppendMode:"Change the append mode between body & workspace",switchToViewContentMode:"Switch to workspace-leaf-content mode",switchToBodyMode:"Switch to body mode",quickSwitch:"Quick switch between workspace-leaf-content & body mode"},message:{quickSwitch:n=>`Switched to ${n} mode`,switchedToBody:"Switched to body mode",switchedToViewContent:"Switched to workspace-leaf-content mode"}};var U={addCssClass:{title:"Ajouter une classe CSS",desc:"Le nom de la classe que vous souhaitez ajouter au Canvas"},addFilePath:{filePath:"Chemin du fichier",desc:"Le chemin du fichier du Canva auquel vous souhaitez ajouter une classe"},renameCssClass:{title:"Renommer une classe CSS",desc:"Le nom de la classe que vous souhaitez renommer",placeholder:"Nouveau nom"},renameFilePath:{title:"Modifier le chemin du Canvas",placeholder:"Nouveau chemin",desc:"Le nouveau chemin du Canvas que vous souhaitez modifier"},className:"Nom de la classe",addButton:"Ajouter",removeFromCanvas:n=>`Suppression de ${n[0]} dans ${n[1]}`,settings:{title:"Param\xE8tre de Canvas CSS Class",noClassAdded:"Aucune classe ajout\xE9e.",useCommandsInfo:"Utilisez la fen\xEAtre de commande pour ajouter un Canvas et une classe.",alreadyApplied:"Cette classe est d\xE9j\xE0 appliqu\xE9e \xE0 ce Canvas.",console:{title:"Niveau de log",desc:"Permet de mieux suivre les ajouts/suppressions effectu\xE9s par le plugin. Notice affichera une notification Obsidian.",options:{none:"Aucun",error:"Erreur",log:"Log",warn:"Avertissement",notice:"Notice"}},appendMode:{default:{title:"Le mode d'ajout par d\xE9faut",desc:"Le mode d'ajout par d\xE9faut de la classe au Canvas, incluant canvas-file et l'attribut data-canvas-path, lors de l'ouverture ou de la cr\xE9ation du Canvas."},title:"Comportement d'ajout",desc:"O\xF9 ajouter la classe dans le Canvas.",bodyDesc:"Ajoute le Canvas au body. Permet d'exporter le Canvas en tant qu'image mais peut avoir un comportement inattendu, notamment avec plusieurs fichiers ouverts.",workspaceLeafDesc:"Ajoute le Canvas au workspace-leaf-content. Conserve la classe lorsque le focus change mais ne peut pas \xEAtre export\xE9 avec l'image.",options:{body:"body",workspaceLeaf:"workspace-leaf-content"},edit:"Modifier le comportement d'ajout de la classe au Canvas."},newCanvas:{addingInfo:"Utilisez la fen\xEAtre de commande pour ajouter une classe \xE0 un nouveau fichier.",addNewCanvas:"Ajouter un nouveau Canvas"},newClass:{addingInfo:"Ajouter une classe"},edit:{filepath:"Modifier le chemin",class:"Renommer la classe"},remove:{desc:"Supprimer toutes les classes",title:"Supprimer"}},commands:{addCanvas:"Ajouter une classe CSS au Canvas actif",removeCanvas:"Supprimer une classe CSS du Canvas actif",changeAppendMode:"Modifier le comportement d'ajout de la classe au Canvas",switchToViewContentMode:"Passer au mode workspace-leaf-content",switchToBodyMode:"Passer au mode body",quickSwitch:"Quick switch entre body & workspace-leaf-content"},message:{quickSwitch:n=>`Passage au mode : ${n}`,switchedToBody:"Passage au mode body",switchedToViewContent:"Passage au mode workspace-leaf-content"}};var G={en:V,fr:U},$=G[j.moment.locale()]||G.en,q=$?j.moment.locale():"en";function Q(n,d){return d.split(".").reduce((e,s)=>e?e[s]:void 0,n)}function i(n){return $&&Q($,n)||Q(V,n)}var _=i("addButton"),k=i("className"),A=class extends m.Modal{constructor(e,s){super(e);this.onSubmit=s}onOpen(){let{contentEl:e}=this;e.createEl("h1",{text:i("addCssClass.title")}),new m.Setting(e).setName(k).setDesc(i("addCssClass.desc")).addText(s=>s.setPlaceholder(k).onChange(async t=>{this.result=t})),new m.Setting(e).addButton(s=>s.setButtonText(_).onClick(async()=>{this.onSubmit(this.result.replace(/\W+/g,"-").toLowerCase()),this.close()}))}onClose(){let{contentEl:e}=this;e.empty()}},M=class extends m.Modal{constructor(e,s){super(e);this.onSubmit=s}onOpen(){let{contentEl:e}=this;e.createEl("h1",{text:i("addCssClass.title")}),new m.Setting(e).setName(i("addFilePath.filePath")).setDesc(i("addFilePath.desc")).addText(a=>a.setPlaceholder(i("addFilePath.filePath")).onChange(async o=>{this.path=o.replace(".canvas","")+".canvas"})),new m.Setting(e).setName(k).setDesc(i("addCssClass.desc")).addText(a=>a.setPlaceholder(k).onChange(async o=>{this.cssClass=o}));let s=document.createDocumentFragment();s.createEl("p",{text:i("settings.appendMode.desc")});let t=s.createEl("ul");for(let a in f){let o=t.createEl("li");o.createEl("span",{text:f[a]}),o.createEl("span",{text:" - "}),o.createEl("span",{text:i(`settings.appendMode.${a}Desc`)})}new m.Setting(e).setName(i("settings.appendMode.title")).setDesc(s).addDropdown(a=>a.addOption("body",i("settings.appendMode.options.body")).addOption("workspace-leaf",i("settings.appendMode.options.workspaceLeaf")).setValue("body").onChange(async o=>{this.appendMode=o,this.close()})),new m.Setting(e).addButton(a=>a.setButtonText(_).onClick(async()=>{this.onSubmit(this.path.replace(".canvas","")+".canvas",this.cssClass.replace(/\W+/g,"-").toLowerCase(),this.appendMode),this.close()}))}onClose(){let{contentEl:e}=this;e.empty()}};var v=require("obsidian");var W=i("addButton"),x=class extends v.Modal{constructor(e,s,t){super(e);this.oldName=s,this.onSubmit=t}onOpen(){let{contentEl:e}=this;e.createEl("h1",{text:i("renameCssClass.title")}),new v.Setting(e).setName(i("renameCssClass.title")).setDesc(i("renameCssClass.desc")).addText(s=>s.setPlaceholder(i("renameCssClass.placeholder")).setValue(this.oldName).onChange(async t=>{this.result=t})),new v.Setting(e).addButton(s=>s.setButtonText(W).onClick(()=>{this.onSubmit(this.result.replace(/\W+/g,"-").toLowerCase()),this.close()}))}onClose(){let{contentEl:e}=this;e.empty()}},E=class extends v.Modal{constructor(e,s,t){super(e);this.oldPath=s,this.onSubmit=t}onOpen(){let{contentEl:e}=this;e.createEl("h1",{text:i("renameFilePath.title")}),new v.Setting(e).setName(i("renameFilePath.placeholder")).setDesc(i("renameFilePath.desc")).addText(s=>s.setPlaceholder(i("renameFilePath.placeholder")).setValue(this.oldPath).onChange(async t=>{this.result=t})),new v.Setting(e).addButton(s=>s.setButtonText(W).onClick(async()=>{this.onSubmit(this.result.replace(".canvas","")+".canvas"),this.close()}))}onClose(){let{contentEl:e}=this;e.empty()}},P=class extends v.Modal{constructor(e,s,t){super(e);this.oldMode=s,this.onSubmit=t}onOpen(){let{contentEl:e}=this;e.createEl("h1",{text:i("settings.appendMode.title")});let s=document.createDocumentFragment();s.createEl("p",{text:i("settings.appendMode.desc")});let t=s.createEl("ul");for(let a in f){let o=t.createEl("li");o.createEl("span",{text:f[a]}),o.createEl("span",{text:" - "}),o.createEl("span",{text:i(`settings.appendMode.${a}Desc`)})}new v.Setting(e).setName(i("settings.appendMode.title")).setDesc(s).addDropdown(a=>a.addOption("body",i("settings.appendMode.options.body")).addOption("workspace-leaf-content",i("settings.appendMode.options.workspaceLeaf")).setValue(this.oldMode).onChange(async o=>{this.result=o})),new v.Setting(e).addButton(a=>a.setButtonText(W).onClick(async()=>{this.onSubmit(this.result),this.close()}))}onClose(){let{contentEl:e}=this;e.empty()}};var T=require("obsidian");function h(n,d){switch(d){case"warn":console.warn(n);break;case"error":console.error(n);break;case"log":console.log(n);break;case"notice":new T.Notice(n);break;default:break}}function b(n,d,e,s){y(n,d,s),L(n,d,e,!0)}function y(n,d,e,s=!1){n&&activeDocument.body.classList.contains(n)&&(h(`Class of "${e}" : ${activeDocument.body.classList}`,d),activeDocument.body.classList.remove(n),h(`Removed ${n} from the body`,d)),activeDocument.body.classList.contains("canvas-file")&&activeDocument.body.getAttribute("data-canvas-path")&&s&&(activeDocument.body.removeAttribute("data-canvas-path"),activeDocument.body.classList.remove("canvas-file"))}function L(n,d,e,s=!1){e.forEach(t=>{n&&n.length>0&&t.view.containerEl.classList.contains(n)&&(t.view.containerEl.classList.remove(n),h(`Removed ${n} from the workspace-leaf-content`,d)),s&&t.view.containerEl.classList.contains("canvas-file")&&t.view.containerEl.getAttribute("data-canvas-path")&&(t.view.containerEl.classList.remove("canvas-file"),t.view.containerEl.removeAttribute("data-canvas-path"))})}function w(n,d,e,s){var o;let t=Array.isArray(s)?s:[s],a=(o=e.canvasAdded.find(c=>c.canvasPath===n))==null?void 0:o.canvasClass;if(d==="body"){h(`RELOADING canvas "${n}" in BODY MODE`,e.logLevel);let c=document.querySelector(`body:has(.canvas-file[data-canvas-path="${n}"])`),r=t.filter(l=>l.view instanceof T.FileView&&l.view.file.path===n);if(c||r){(!a||a.length===0)&&(C(null,n,d,e.logLevel,t),L(null,e.logLevel,t,!0),a=[]);for(let l of a)C(l,n,d,e.logLevel,r),L(l,e.logLevel,t,!0)}}else if(h(`RELOADING canvas "${n}" in VIEW-CONTENT MODE`,e.logLevel),!a||a.length===0)y(null,e.logLevel,n,!0),C(null,n,d,e.logLevel,t);else for(let c of a)y(c,e.logLevel,n,!0),C(c,n,d,e.logLevel,t)}function C(n,d,e,s,t){if(e==="body")activeDocument.body.classList.contains("canvas-file")||activeDocument.body.addClass("canvas-file"),(!activeDocument.body.getAttribute("data-canvas-path")||activeDocument.body.getAttribute("data-canvas-path")!==d)&&(activeDocument.body.setAttribute("data-canvas-path",d),activeDocument.body.setAttribute("data-canvas-path",d)),n&&n.length>0&&!activeDocument.body.classList.contains(n)&&(activeDocument.body.addClass(n),h(`Added ${n} to the body`,s));else for(let a of t)a.view.containerEl.classList.contains("canvas-file")||a.view.containerEl.addClass("canvas-file"),a.view.containerEl.getAttribute("data-canvas-path")||a.view.containerEl.setAttribute("data-canvas-path",d),n&&!a.view.containerEl.classList.contains(n)&&(a.view.containerEl.addClass(n),h(`Added ${n} to the workspace-leaf-content`,s))}var D=class extends u.PluginSettingTab{constructor(e,s){super(e,s);this.plugin=s}display(){let{containerEl:e}=this;e.empty(),e.createEl("h1",{text:i("settings.title")}),this.plugin.settings.canvasAdded.length===0&&(e.createEl("p",{text:i("settings.noClassAdded")}),e.createEl("p",{text:i("settings.useCommandsInfo")})),new u.Setting(e).setName(i("settings.console.title")).setDesc(i("settings.console.desc")).addDropdown(t=>{t.addOption("none",i("settings.console.options.none")).addOption("error",i("settings.console.options.error")).addOption("warn",i("settings.console.options.warn")).addOption("log",i("settings.console.options.log")).addOption("notice",i("settings.console.options.notice")).setValue(this.plugin.settings.logLevel).onChange(async a=>{this.plugin.settings.logLevel=a,await this.plugin.saveSettings()})}),new u.Setting(e).setName(i("settings.appendMode.default.title")).setDesc(i("settings.appendMode.default.desc")).addDropdown(t=>{t.addOption("workspace-leaf-content",i("settings.appendMode.options.workspaceLeaf")).addOption("body",i("settings.appendMode.options.body")).setValue(this.plugin.settings.defaultAppendMode).onChange(async a=>{this.plugin.settings.defaultAppendMode=a;let o=this.plugin.getLeafOfCanvasNotInSettings();for(let c of o)w(c.view.file.path,a,this.plugin.settings,c);await this.plugin.saveSettings()})});let s=this.plugin.settings.logLevel;new u.Setting(e).setDesc(i("settings.newCanvas.addingInfo")).addButton(t=>t.setButtonText(i("settings.newCanvas.addNewCanvas")).onClick(async()=>{new M(this.app,async(a,o,c)=>{var l,g,B,R;this.plugin.settings.canvasAdded.find(S=>S.canvasPath===a)?(g=(l=this.plugin.settings.canvasAdded.find(S=>S.canvasPath===a))==null?void 0:l.canvasClass)!=null&&g.includes(o)?new u.Notice(i("settings.alreadyApplied")):(R=(B=this.plugin.settings.canvasAdded.find(S=>S.canvasPath===a))==null?void 0:B.canvasClass)==null||R.push(o):this.plugin.settings.canvasAdded.push({canvasPath:a,canvasClass:[o],appendMode:c}),await this.plugin.saveSettings(),this.display();let r=this.plugin.getLeafByPath(a);C(o,a,c,s,r)}).open()}));for(let t of this.plugin.settings.canvasAdded){new u.Setting(e).setName(t.canvasPath.replace(".canvas","")).setClass("canvas-css-class-title").addExtraButton(a=>a.setIcon("plus").setTooltip(i("settings.newClass.addingInfo")).onClick(async()=>{new A(this.app,async o=>{if(t.canvasClass.indexOf(o)===-1){t.canvasClass.push(o),await this.plugin.saveSettings(),this.display();let c=this.plugin.getLeafByPath(t.canvasPath);C(o,t.canvasPath,t.appendMode,s,c)}else new u.Notice(i("settings.alreadyApplied"))}).open()})).addExtraButton(a=>a.setIcon("edit").setTooltip(i("settings.edit.filepath")).onClick(async()=>{new E(this.app,t.canvasPath.replace(".canvas",""),async o=>{t.canvasPath=o.replace(".canvas","")+".canvas",await this.plugin.saveSettings(),this.display()}).open()})).addExtraButton(a=>a.setIcon("pane-layout").setTooltip(i("settings.appendMode.edit")).onClick(async()=>{new P(this.app,t.appendMode,async o=>{t.appendMode=o,await this.plugin.saveSettings(),this.display();let c=this.plugin.getLeafByPath(t.canvasPath);w(t.canvasPath,t.appendMode,this.plugin.settings,c)}).open()})).addExtraButton(a=>a.setIcon("trash").setTooltip(i("settings.remove.desc")).onClick(async()=>{var c;let o=this.plugin.settings.canvasAdded.find(r=>r.canvasPath===t.canvasPath);this.plugin.settings.canvasAdded=this.plugin.settings.canvasAdded.filter(r=>r.canvasPath!==t.canvasPath),await this.plugin.saveSettings();for(let r of(c=o==null?void 0:o.canvasClass)!=null?c:[]){let l=this.plugin.getLeafByPath(t.canvasPath);b(r,s,l,t.canvasPath)}this.display()}));for(let a of t.canvasClass)new u.Setting(e).setName(a).setClass("canvas-css-class-opt").addExtraButton(o=>o.setIcon("edit").setTooltip(i("settings.edit.class")).onClick(async()=>{new x(this.app,a,async c=>{let r=t.canvasClass.indexOf(a);r>-1&&(t.canvasClass[r]=c),await this.plugin.saveSettings(),this.display();let l=this.plugin.getLeafByPath(t.canvasPath);w(t.canvasPath,t.appendMode,this.plugin.settings,l)}).open()})).addExtraButton(o=>o.setIcon("cross").setTooltip(i("settings.remove.title")).onClick(async()=>{let c=t.canvasClass.indexOf(a);if(c>-1&&t.canvasClass.splice(c,1),t.canvasClass.length===0){let l=this.plugin.settings.canvasAdded.indexOf(t);l>-1&&this.plugin.settings.canvasAdded.splice(l,1)}await this.plugin.saveSettings(),this.display();let r=this.plugin.getLeafByPath(t.canvasPath);b(a,s,r,t.canvasPath)}))}}};var O=require("obsidian");var N=class extends O.FuzzySuggestModal{constructor(e,s,t,a){super(e);this.plugin=s,this.settings=t,this.filepath=a}getItems(){var s;let e=(s=this.settings.canvasAdded.find(t=>t.canvasPath===this.filepath))==null?void 0:s.canvasClass;return e||[]}getItemText(e){return e}onChooseItem(e,s){let t=this.settings.canvasAdded.find(a=>a.canvasPath===this.filepath);if(t){let a=t.canvasClass.indexOf(e.toString());if(a>-1&&t.canvasClass.splice(a,1),t.canvasClass.length===0){let c=this.settings.canvasAdded.indexOf(t);c>-1&&this.settings.canvasAdded.splice(c,1)}this.plugin.saveSettings(),new O.Notice(i("removeFromCanvas")([e.toString(),this.filepath]));let o=this.plugin.getLeafByPath(this.filepath);b(e.toString(),this.settings.logLevel,o,this.filepath)}}};var F=class extends p.Plugin{quickCreateSettings(e,s){let t=this.settings.canvasAdded.find(a=>a.canvasPath===e);return t||(t={canvasPath:e,canvasClass:[],appendMode:s},this.settings.canvasAdded.push({canvasPath:e,canvasClass:[],appendMode:s}),this.saveSettings()),t}convertOldSettings(){this.settings.canvasAdded&&(this.settings.canvasAdded.forEach(e=>{!e.appendMode||e.appendMode.length===0?e.appendMode=this.settings.defaultAppendMode:e.appendMode==="view-content"&&(e.appendMode="workspace-leaf-content")}),this.saveSettings())}getLeafOfCanvasNotInSettings(){let e=[];return this.app.workspace.iterateAllLeaves(s=>{if(s.view instanceof p.FileView){if(s.view.file.extension==="canvas"){let t=s.view;this.settings.canvasAdded.find(o=>o.canvasPath===t.file.path)||e.push(s)}}else return e}),h(`Found ${e.length} canvas leaves without settings`,this.settings.logLevel),e}getLeafByPath(e){let s=[];return this.app.workspace.iterateAllLeaves(t=>{var a;t.view instanceof p.FileView&&((a=t.view.file)==null?void 0:a.path)===e&&s.push(t)}),h(`Found ${s.length} leaves for ${e}`,this.settings.logLevel),s}addingCanvasClassToLeaf(e){var t;let s=(t=this.app.workspace.getActiveViewOfType(p.ItemView))==null?void 0:t.getViewType();if(!e){h("OPENED FILE IS NOT A CANVAS",this.settings.logLevel);for(let a of this.settings.canvasAdded)for(let o of a.canvasClass)y(o,this.settings.logLevel,void 0,!0);return}if(e&&e.extension==="canvas"&&s==="canvas"){h(`OPENED FILE ${e.path} IS A CANVAS ; ADDING CLASS`,this.settings.logLevel);let a=this.settings.canvasAdded.find(l=>l.canvasPath===e.path),o=this.getLeafByPath(e.path),c=a?a.appendMode:this.settings.defaultAppendMode;w(e.path,c,this.settings,o);let r=this.settings.canvasAdded.filter(l=>l.canvasPath!==e.path);for(let l of r)for(let g of l.canvasClass)(a?a.canvasClass.includes(g):!1)||(L(g,this.settings.logLevel,o),y(g,this.settings.logLevel,e.path))}else if(s!=="canvas"){let a=e?` ("${e.path}") `:" ";h(`OPENED FILE${a}IS NOT A CANVAS`,this.settings.logLevel);for(let o of this.settings.canvasAdded)for(let c of o.canvasClass)y(c,this.settings.logLevel,e==null?void 0:e.path,!0)}}async onload(){await this.loadSettings(),console.log(`Loading ${this.manifest.name.replaceAll(" ","")} v${this.manifest.version} (language: ${q})`),this.convertOldSettings(),this.addCommand({id:"add-canvas-css-class",name:i("commands.addCanvas"),checkCallback:e=>{let s=this.app.workspace.getActiveViewOfType(p.ItemView);if((s==null?void 0:s.getViewType())==="canvas"){if(!e){let t=s.file.path;new A(this.app,a=>{var l;let o=this.settings.canvasAdded.find(g=>g.canvasPath===t);o?o.canvasClass.includes(a)?new p.Notice(i("settings.alreadyApplied")):(o.canvasClass.push(a),this.settings.canvasAdded=this.settings.canvasAdded.map(g=>g.canvasPath===t?o:g)):this.settings.canvasAdded.push({canvasPath:t,canvasClass:[a],appendMode:this.settings.defaultAppendMode}),this.saveSettings();let c=(l=this.settings.canvasAdded.find(g=>g.canvasPath===t))==null?void 0:l.appendMode,r=this.getLeafByPath(t);C(a,t,c||this.settings.defaultAppendMode,this.settings.logLevel,r)}).open()}return!0}return!1}}),this.addCommand({id:"remove-canvas-css-class",name:i("commands.removeCanvas"),checkCallback:e=>{let s=this.app.workspace.getActiveViewOfType(p.ItemView);if((s==null?void 0:s.getViewType())==="canvas"){let t=s.file.path;return this.settings.canvasAdded.find(o=>o.canvasPath===t)?(e||new N(this.app,this,this.settings,t).open(),!0):!1}return!1}}),this.addCommand({id:"switch-to-body-mode",name:i("commands.switchToBodyMode"),checkCallback:e=>{let s=this.app.workspace.getActiveViewOfType(p.ItemView);if((s==null?void 0:s.getViewType())==="canvas"){let t=s.file.path;if(!e){let a=this.quickCreateSettings(t,"body");a.appendMode="body",this.saveSettings(),new p.Notice(i("message.switchedToBody"));let o=this.getLeafByPath(t);w(t,a.appendMode,this.settings,o)}return!0}return!1}}),this.addCommand({id:"switch-to-workspace-leaf-content-mode",name:i("commands.switchToViewContentMode"),checkCallback:e=>{let s=this.app.workspace.getActiveViewOfType(p.ItemView);if((s==null?void 0:s.getViewType())==="canvas"){let t=s.file.path;if(!e){let a=this.quickCreateSettings(t,"workspace-leaf-content");a.appendMode="workspace-leaf-content",this.saveSettings(),new p.Notice(i("message.switchedToViewContent"));let o=this.getLeafByPath(t);w(t,a.appendMode,this.settings,o)}return!0}return!1}}),this.addCommand({id:"quick-switch-mode",name:i("commands.quickSwitch"),checkCallback:e=>{let s=this.app.workspace.getActiveViewOfType(p.ItemView);if((s==null?void 0:s.getViewType())==="canvas"){let t=s.file.path;if(!e){let a=this.quickCreateSettings(t,this.settings.defaultAppendMode);a.appendMode=a.appendMode==="body"?"workspace-leaf-content":"body",this.saveSettings(),new p.Notice(i("message.quickSwitch")(a.appendMode));let o=this.getLeafByPath(t);w(t,a.appendMode,this.settings,o)}return!0}return!1}}),this.app.workspace.onLayoutReady(()=>{this.addingCanvasClassToLeaf(this.app.workspace.getActiveFile())}),this.registerEvent(this.app.workspace.on("active-leaf-change",e=>{let s=(e==null?void 0:e.view)instanceof p.FileView?e.view:null,t=s?s.file:null;this.addingCanvasClassToLeaf(t)})),this.addSettingTab(new D(this.app,this))}onunload(){console.log(`Unloading ${this.manifest.name.replaceAll(" ","")} v${this.manifest.version} (language: ${q})`)}async loadSettings(){this.settings=Object.assign({},z,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};
